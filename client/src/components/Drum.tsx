/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Object_0004: THREE.Mesh;
    Object_0004_1: THREE.Mesh;
    Object_0004_2: THREE.Mesh;
    Object_0004_3: THREE.Mesh;
    Object_0004_4: THREE.Mesh;
  };
  materials: {
    ['Black.004']: THREE.MeshStandardMaterial;
    ['Metal.004']: THREE.MeshStandardMaterial;
    ['Black_Metal.003']: THREE.MeshStandardMaterial;
    ['Gold.003']: THREE.MeshStandardMaterial;
    ['White.003']: THREE.MeshStandardMaterial;
  };
};

export default function Drum(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/drum-kit2.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group scale={6}>
        <mesh castShadow receiveShadow geometry={nodes.Object_0004.geometry} material={materials['Black.004']} />
        <mesh castShadow receiveShadow geometry={nodes.Object_0004_1.geometry} material={materials['Metal.004']} />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_0004_2.geometry}
          material={materials['Black_Metal.003']}
        />
        <mesh castShadow receiveShadow geometry={nodes.Object_0004_3.geometry} material={materials['Gold.003']} />
        <mesh castShadow receiveShadow geometry={nodes.Object_0004_4.geometry} material={materials['White.003']} />
      </group>
    </group>
  );
}

useGLTF.preload('/models/drum-kit2.glb');
