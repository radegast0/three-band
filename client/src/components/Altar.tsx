/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Circle__0: THREE.Mesh;
    Circle001__0: THREE.Mesh;
    Circle004__0: THREE.Mesh;
    Circle006__0: THREE.Mesh;
    Circle006__0001: THREE.Mesh;
    Circle006__0002: THREE.Mesh;
    Circle006__0003: THREE.Mesh;
    Circle006__0004: THREE.Mesh;
    Circle006__0005: THREE.Mesh;
    Circle006__0006: THREE.Mesh;
    Circle006__0007: THREE.Mesh;
    Circle006__0008: THREE.Mesh;
    Circle006__0009: THREE.Mesh;
    Circle006__0010: THREE.Mesh;
    Circle007__0: THREE.Mesh;
    Circle008__0: THREE.Mesh;
    Circle010__0: THREE.Mesh;
    Circle015__0: THREE.Mesh;
    Circle016_TT_checker_2048x2048_UV_GRID_0: THREE.Mesh;
    Cube003__0: THREE.Mesh;
    Cube004__0: THREE.Mesh;
    Cube005__0: THREE.Mesh;
    Cube006__0: THREE.Mesh;
    Cube007__0: THREE.Mesh;
    Cube008__0: THREE.Mesh;
    Cube009__0: THREE.Mesh;
    Cube010__0: THREE.Mesh;
    Plane002__0: THREE.Mesh;
    Plane003__0: THREE.Mesh;
    Plane005__0: THREE.Mesh;
    Plane006__0: THREE.Mesh;
    Plane007__0: THREE.Mesh;
    Plane008__0: THREE.Mesh;
    Plane009__0: THREE.Mesh;
    Plane010__0: THREE.Mesh;
    Plane011__0: THREE.Mesh;
    Plane012__0: THREE.Mesh;
    Plane013__0: THREE.Mesh;
    Plane014__0: THREE.Mesh;
    defaultMaterial009: THREE.Mesh;
    defaultMaterial003: THREE.Mesh;
    defaultMaterial: THREE.Mesh;
    defaultMaterial007: THREE.Mesh;
    defaultMaterial008: THREE.Mesh;
    defaultMaterial005: THREE.Mesh;
    defaultMaterial002: THREE.Mesh;
    defaultMaterial006: THREE.Mesh;
    defaultMaterial001: THREE.Mesh;
    defaultMaterial004: THREE.Mesh;
  };
  materials: {
    ['Circle.001__0.001']: THREE.MeshStandardMaterial;
    ['TT_checker_2048x2048_UV_GRID.001']: THREE.MeshStandardMaterial;
    material: THREE.MeshStandardMaterial;
  };
};

export default function Altar(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/test.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle006__0.geometry}
          material={materials['Circle.001__0.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle006__0001.geometry}
          material={materials['Circle.001__0.001']}
          position={[0.018, 0.023, -0.03]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle006__0002.geometry}
          material={materials['Circle.001__0.001']}
          position={[0.189, -0.374, -0.112]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle006__0003.geometry}
          material={materials['Circle.001__0.001']}
          position={[0.238, -0.769, -0.247]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle006__0004.geometry}
          material={materials['Circle.001__0.001']}
          position={[0.136, -0.937, -0.309]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle006__0005.geometry}
          material={materials['Circle.001__0.001']}
          position={[0.103, -1.303, -0.262]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle006__0006.geometry}
          material={materials['Circle.001__0.001']}
          position={[-0.078, -1.535, -0.157]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle006__0007.geometry}
          material={materials['Circle.001__0.001']}
          position={[-0.246, -1.761, 0.022]}
          rotation={[0.034, -0.089, 0.054]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle006__0008.geometry}
          material={materials['Circle.001__0.001']}
          position={[-0.645, -1.771, -0.196]}
          rotation={[0.034, -0.089, 0.054]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle006__0009.geometry}
          material={materials['Circle.001__0.001']}
          position={[-0.79, -1.383, -0.351]}
          rotation={[0.034, -0.089, 0.054]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle006__0010.geometry}
          material={materials['Circle.001__0.001']}
          position={[-0.862, -1.004, -0.443]}
          rotation={[0.034, -0.089, 0.054]}
        />
      </group>
      <group position={[0.313, 2.758, -0.402]} rotation={[-1.453, 1.123, 1.465]} scale={0.858}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial009.geometry}
          material={materials.material}
          position={[-0.64, 1.248, 0.392]}
        />
      </group>
      <group position={[0.313, 2.758, -0.402]} rotation={[-1.453, 1.123, 1.465]} scale={0.858}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial003.geometry}
          material={materials.material}
          position={[-0.64, 1.248, 0.392]}
        />
      </group>
      <group position={[0.313, 2.758, -0.402]} rotation={[-1.453, 1.123, 1.465]} scale={0.858}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial.geometry}
          material={materials.material}
          position={[-0.64, 1.248, 0.392]}
        />
      </group>
      <group position={[0.313, 2.758, -0.402]} rotation={[-1.453, 1.123, 1.465]} scale={0.858}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial007.geometry}
          material={materials.material}
          position={[-0.64, 1.248, 0.392]}
        />
      </group>
      <group position={[0.313, 2.758, -0.402]} rotation={[-1.453, 1.123, 1.465]} scale={0.858}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial008.geometry}
          material={materials.material}
          position={[-0.64, 1.248, 0.392]}
        />
      </group>
      <group position={[0.313, 2.758, -0.402]} rotation={[-1.453, 1.123, 1.465]} scale={0.858}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial005.geometry}
          material={materials.material}
          position={[-0.64, 1.248, 0.392]}
        />
      </group>
      <group position={[0.313, 2.758, -0.402]} rotation={[-1.453, 1.123, 1.465]} scale={0.858}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial002.geometry}
          material={materials.material}
          position={[-0.64, 1.248, 0.392]}
        />
      </group>
      <group position={[0.313, 2.758, -0.402]} rotation={[-1.453, 1.123, 1.465]} scale={0.858}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial006.geometry}
          material={materials.material}
          position={[-0.64, 1.248, 0.392]}
        />
      </group>
      <group position={[0.313, 2.758, -0.402]} rotation={[-1.453, 1.123, 1.465]} scale={0.858}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial001.geometry}
          material={materials.material}
          position={[-0.64, 1.248, 0.392]}
        />
      </group>
      <group position={[0.313, 2.758, -0.402]} rotation={[-1.453, 1.123, 1.465]} scale={0.858}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial004.geometry}
          material={materials.material}
          position={[-0.64, 1.248, 0.392]}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle__0.geometry}
        material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle001__0.geometry}
        material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle004__0.geometry}
        material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle007__0.geometry}
        material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle008__0.geometry}
        material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle010__0.geometry}
        material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle015__0.geometry}
        material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle016_TT_checker_2048x2048_UV_GRID_0.geometry}
        material={materials['TT_checker_2048x2048_UV_GRID.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube003__0.geometry}
        material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube004__0.geometry}
        material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube005__0.geometry}
        material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube006__0.geometry}
        material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube007__0.geometry}
        material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube008__0.geometry}
        material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube009__0.geometry}
        material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube010__0.geometry}
        material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane002__0.geometry}
        // material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      >
        <meshStandardMaterial emissive={'yellow'} emissiveIntensity={2} color="yellow" />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane003__0.geometry}
        // material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      >
        <meshStandardMaterial emissive={'yellow'} emissiveIntensity={2} color="yellow" />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane005__0.geometry}
        // material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      >
        <meshStandardMaterial emissive={'yellow'} emissiveIntensity={2} color="yellow" />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane006__0.geometry}
        // material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      >
        <meshStandardMaterial emissive={'yellow'} emissiveIntensity={2} color="yellow" />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane007__0.geometry}
        // material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      >
        <meshStandardMaterial emissive={'yellow'} emissiveIntensity={2} color="yellow" />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane008__0.geometry}
        // material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      >
        <meshStandardMaterial emissive={'yellow'} emissiveIntensity={2} color="yellow" />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane009__0.geometry}
        // material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      >
        <meshStandardMaterial emissive={'yellow'} emissiveIntensity={2} color="yellow" />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane010__0.geometry}
        // material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      >
        <meshStandardMaterial emissive={'yellow'} emissiveIntensity={2} color="yellow" />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane011__0.geometry}
        // material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      >
        <meshStandardMaterial emissive={'yellow'} emissiveIntensity={2} color="yellow" />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane012__0.geometry}
        // material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      >
        <meshStandardMaterial emissive={'yellow'} emissiveIntensity={2} color="yellow" />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane013__0.geometry}
        // material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      >
        <meshStandardMaterial emissive={'yellow'} emissiveIntensity={2} color="yellow" />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane014__0.geometry}
        // material={materials['Circle.001__0.001']}
        rotation={[-Math.PI / 2, 0, 0]}
      >
        <meshStandardMaterial emissive={'yellow'} emissiveIntensity={2} color="yellow" />
      </mesh>
    </group>
  );
}

useGLTF.preload('/test.glb');
