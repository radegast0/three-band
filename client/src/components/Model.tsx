/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube004: THREE.Mesh
    Cube004_1: THREE.Mesh
    Cube004_2: THREE.Mesh
    Cube004_3: THREE.Mesh
  }
  materials: {
    terrain_and_rock: THREE.MeshStandardMaterial
    guitar_altar: THREE.MeshStandardMaterial
    lava: THREE.MeshStandardMaterial
    assets: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(
    '/compressed_1738341179398_metal_world_complete.glb'
  ) as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[3.923, -1.722, -0.984]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube004.geometry}
          material={materials.terrain_and_rock}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube004_1.geometry}
          material={materials.guitar_altar}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube004_2.geometry}
          material={materials.lava}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube004_3.geometry}
          material={materials.assets}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/compressed_1738341179398_metal_world_complete.glb')
